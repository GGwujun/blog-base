{"version":3,"file":"src.cjs.development.js","sources":["../src/util/escape.ts","../src/util/isFence.ts","../src/util/isCode.ts","../src/util/isKeep.ts","../src/util/replacement/fence.ts","../src/util/findParentNumber.ts","../src/util/repeat.ts","../src/util/indentCodeIsListfirstChild.ts","../src/util/findOrderListIndentNumber.ts","../src/util/replacement/list/listNode.ts","../src/util/replacement/list/index.ts","../src/util/replacement/keep.ts","../src/util/replacement/blank.ts","../src/plugins/list.ts","../src/plugins/hr.ts","../src/plugins/paragraph.ts","../src/plugins/heading.ts","../src/plugins/fencedCodeBlock.ts","../src/plugins/code.ts","../src/plugins/referenceLinks.ts","../src/plugins/table.ts","../src/plugins/indentedCodeBlock.ts","../src/plugins/blockquote.ts","../src/plugins/em.ts","../src/plugins/del.ts","../src/plugins/link.ts","../src/plugins/image.ts","../src/plugins/br.ts","../src/plugins/strong.ts","../src/plugins/taskListItems.ts","../src/plugins/index.ts","../src/util/collapse-whitespace.ts","../src/util/isBlock.ts","../src/util/isVoid.ts","../src/service/HTMLParser.ts","../src/service/RootNode.ts","../src/service/Rules/findRule.ts","../src/service/Rules/index.ts","../src/service/Node/isBlank.ts","../src/service/Node/flankingWhitespace.ts","../src/service/Node/index.ts","../src/util/join.ts","../src/service/index.ts","../src/index.ts"],"sourcesContent":["export function escape(\n  escapes: [RegExp, string | ((substring: string, ...args: any[]) => string)][],\n  string: string\n) {\n  return escapes.reduce(function(accumulator, escape) {\n    return accumulator.replace(escape[0], <string>escape[1]);\n  }, string);\n}\n","import { Options, Node } from '../types';\n\nexport function isFence(options: Options, node: Node): boolean {\n  return !!(\n    options.codeBlockStyle === 'fenced' &&\n    node.nodeName === 'PRE' &&\n    node.firstChild &&\n    node.firstChild.nodeName === 'CODE'\n  );\n}\n","import { Node } from '../types';\n\nexport function isCode(node: Node) {\n  var hasSiblings = node.previousSibling || node.nextSibling;\n  var isCodeBlock =\n    node.parentNode && node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n  return node.nodeName === 'CODE' && !isCodeBlock;\n}\n","import { Options, Node } from '../types';\n\nexport function isKeep(options: Options, node: Node): boolean {\n  const filters = options.keepFilter ? options.keepFilter : ['div', 'style'];\n\n  return Array.isArray(filters)\n    ? filters.some(filter => filter === node.nodeName.toLowerCase())\n    : typeof filters === 'function'\n    ? filters(node, options)\n    : filters === node.nodeName.toLowerCase();\n}\n","import { Options } from '../../types';\n\nexport function fenceReplacement(\n  content: string,\n  node: HTMLElement | Document | DocumentFragment | Element,\n  options: Options\n) {\n  var className = node.firstChild ? (node.firstChild as Element).className : '';\n  var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n  var startFence =\n    options.startFence != undefined ? options.startFence : options.fence;\n  var endFence =\n    options.endFence != undefined ? options.endFence : options.fence;\n\n  var parent = node.parentNode;\n  var parentIsList = parent && parent.nodeName === 'LI';\n  return (\n    (parentIsList ? '\\n' : '\\n\\n') +\n    startFence +\n    language +\n    '\\n' +\n    (node.firstChild ? node.firstChild.textContent : '') +\n    ((node.firstChild &&\n      node.firstChild.textContent &&\n      node.firstChild.textContent.endsWith('\\n')) ||\n    !content\n      ? ''\n      : '\\n') +\n    endFence +\n    '\\n\\n'\n  );\n}\n","import { Node } from '../types';\n\nexport function findParentNumber(\n  node: Node,\n  parentName: string,\n  count = 0\n): number {\n  if (!node.parentNode) {\n    return count;\n  }\n  if (node.parentNode.nodeName === parentName) {\n    count++;\n  }\n\n  return findParentNumber(node.parentNode as HTMLElement, parentName, count);\n}\n","export function repeat(character: string, count: number) {\n  return Array(count + 1).join(character);\n}\n","import { Options, Node } from '../types';\n\nexport function IndentCodeIsListfirstChild(list: Node, options: Options) {\n  return (\n    options.codeBlockStyle !== 'fenced' &&\n    list &&\n    list.firstChild &&\n    list.nodeName === 'LI' &&\n    list.firstChild.nodeName === 'PRE'\n  );\n}\n","import { Node } from '../types';\n\nexport function findOrderListIndentNumber(node: Node, count = 0): number {\n  const parentName = 'OL';\n  const parent = node.parentNode as HTMLElement;\n  if (!parent) {\n    return count;\n  }\n  if (parent.nodeName === parentName) {\n    var start = parent.getAttribute('start');\n    if (start && start.length > 1) {\n      count += start.length - 1;\n    }\n  }\n\n  return findOrderListIndentNumber(parent, count);\n}\n","import { Node, Options } from '../../../types';\nimport { findParentNumber } from '../../findParentNumber';\nimport { repeat } from '../../repeat';\nimport { IndentCodeIsListfirstChild } from '../../indentCodeIsListfirstChild';\nimport { findOrderListIndentNumber } from '../../findOrderListIndentNumber';\n\nexport class ListNode {\n  node: Node;\n\n  constructor(node: Node) {\n    this.node = node;\n  }\n\n  private get parent() {\n    return this.node.parentNode;\n  }\n\n  get parentIsOL() {\n    return this.parent && this.parent.nodeName === 'OL';\n  }\n\n  get nestULCount() {\n    return findParentNumber(this.node, 'UL');\n  }\n\n  get nestOLCount() {\n    return findParentNumber(this.node, 'OL');\n  }\n\n  get nestCount() {\n    return this.nestULCount + this.nestOLCount;\n  }\n\n  get isLoose() {\n    const node = this.node;\n    return node.firstChild && node.firstChild.nodeName === 'P'; // Todo:isBlock\n  }\n\n  get isNewList() {\n    const parent = this.parent;\n    return (\n      parent &&\n      parent.previousSibling &&\n      parent.previousSibling.nodeName === parent.nodeName\n    );\n  }\n\n  get followCode() {\n    const parent = this.parent;\n    return (\n      parent && parent.nextSibling && parent.nextSibling.nodeName === 'PRE'\n    );\n  }\n\n  get inLast() {\n    const parent = this.parent;\n    return parent && parent.lastChild === this.node;\n  }\n\n  get nestListAndParentIsEmpty() {\n    const { nestOLCount, nestULCount, node } = this;\n    return (\n      nestOLCount + nestULCount > 1 &&\n      node.parentNode &&\n      node.parentNode.parentNode &&\n      (node.parentNode.parentNode as HTMLElement).innerHTML ===\n        (node.parentNode as HTMLElement).outerHTML\n    );\n  }\n\n  lineIndent(options: Options) {\n    const { nestOLCount, nestULCount, nestCount, node } = this;\n    var indent = `\\n    ${repeat(' ', nestCount - 1)}$1`;\n    if (IndentCodeIsListfirstChild(node, options) && nestOLCount) {\n      indent = `\\n  ${repeat(' ', nestCount)}$1`;\n    } else if (nestULCount) {\n      indent = `\\n${repeat(' ', nestCount * 2)}$1`;\n    }\n    return indent;\n  }\n\n  caclPrefix(input: string) {\n    let prefix = input;\n    const {\n      nestOLCount,\n      nestULCount,\n      parentIsOL,\n      node,\n      parent,\n      isNewList,\n      inLast,\n      isLoose,\n      followCode,\n      nestListAndParentIsEmpty,\n    } = this;\n    if (parent && parentIsOL) {\n      var start = (parent as HTMLElement).getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix =\n        (start ? Number(start) + index : index + 1) +\n        (isNewList ? ')  ' : '.  ');\n    }\n    if (followCode) {\n      if (!isLoose) prefix = ' ' + prefix + '   '; // example 235\n      if (inLast && isLoose) {\n        // example 293\n        prefix = '  ' + prefix;\n      }\n    }\n\n    if (nestULCount > 1) {\n      prefix = repeat(' ', (nestULCount - 1) * 2) + prefix;\n    }\n    if (nestULCount && nestOLCount) {\n      const indent = findOrderListIndentNumber(node);\n      prefix = repeat(' ', nestULCount * 4 + indent) + prefix;\n    }\n    // Info：嵌套列表且父列表为空\n    if (nestListAndParentIsEmpty) {\n      prefix = prefix.trimStart();\n    }\n\n    return prefix;\n  }\n}\n","import { Options, Node } from '../../../types';\nimport { ListNode } from './listNode';\n\nexport function listReplacement(content: string, node: Node, options: Options) {\n  var listNode = new ListNode(node);\n  var { isLoose, isNewList: newList } = listNode;\n\n  var bulletListMarker = newList ? '+' : options.bulletListMarker;\n  var prefix = listNode.caclPrefix(bulletListMarker + ' ');\n\n  content = content\n    .replace(/^\\n+/, '') // remove leading newlines\n    .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n    .replace(/\\n(\\S)/gm, listNode.lineIndent(options)); // indent\n\n  return (\n    prefix +\n    content +\n    (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '') +\n    (isLoose ? '\\n' : '')\n  );\n}\n","import { Node } from '../../types';\n\nexport function keepReplacement(content: string, node: Node) {\n  let html = (node as HTMLElement).outerHTML;\n  if (!content) {\n    let attrs = '';\n    for (let i = 0; i < node.attributes.length; i++) {\n      let attr = node.attributes[i];\n      attrs += `${attr.name}=\"${attr.nodeValue}\"`;\n    }\n    html = `<${node.localName.toLowerCase()} ${attrs} />`;\n  }\n  return node.isBlock ? '\\n\\n' + html + '\\n' : html;\n}\n","// blank\nimport { isCode } from '../isCode';\nimport { isFence } from '../isFence';\nimport { isKeep } from '../isKeep';\nimport { fenceReplacement } from './fence';\nimport { listReplacement } from './list';\nimport { keepReplacement } from './keep';\nimport { Options, Node } from '../../types';\n\nexport function blankReplacement(\n  content: string,\n  node: Node,\n  options: Options\n) {\n  if (isKeep(options, node)) {\n    return keepReplacement(content, node);\n  } else if (isFence(options, node)) {\n    return fenceReplacement(content, node, options);\n  } else if (isCode(node)) {\n    var delimiter = options.codeDelimiter ? options.codeDelimiter : '`';\n\n    return (\n      delimiter +\n      (options.codeBlockStyle === 'fenced' ? ' ' : '') +\n      (content || ' ') +\n      delimiter +\n      '\\n'\n    );\n  } else if (node.nodeName.toLowerCase() === 'blockquote') {\n    return '>';\n  } else if (node.nodeName.toLowerCase() === 'li') {\n    return listReplacement(content, node, options);\n  } else if (node.nodeName.toLowerCase() === 'ul') {\n    return content + '\\n\\n';\n  }\n  return node.isBlock ? content + '\\n\\n' : '';\n}\n","// list\nimport Service from '../service';\nimport { listReplacement } from '../util';\n\nexport const applyListRule = (service: Service) => {\n  service.addRule('list', {\n    filter: ['ul', 'ol'],\n\n    replacement: function(content, node) {\n      var parent = node.parentNode;\n      if (\n        parent &&\n        parent.nodeName === 'LI' &&\n        parent.lastElementChild === node\n      ) {\n        return '\\n' + content;\n      } else {\n        return '\\n\\n' + content + '\\n\\n';\n      }\n    },\n  });\n\n  service.addRule('listItem', {\n    filter: 'li',\n\n    replacement: listReplacement,\n  });\n};\n","import Service from '../service';\n\nexport const applyHrRule = (service: Service) => {\n  service.addRule('hr', {\n    filter: 'hr',\n\n    replacement: function(_, __, options) {\n      return '\\n' + options.hr + '\\n';\n    },\n  });\n};\n","import Service from '../service';\n\nvar escapes: [RegExp, string][] = [[/\\s-/g, ' \\\\-']];\n\nfunction escape(string: string) {\n  return escapes.reduce(function(accumulator, escape) {\n    return accumulator.replace(escape[0], escape[1]);\n  }, string);\n}\nexport const applyParagraphRule = (service: Service) => {\n  service.addRule('paragraph', {\n    filter: 'p',\n\n    replacement: function(content, node) {\n      const hasCommentChild = Array.from(node.childNodes).some(\n        item => item.nodeType === 8\n      );\n      return '\\n\\n' + (hasCommentChild ? content : escape(content)) + '\\n\\n';\n    },\n  });\n};\n","import Service from '../service';\nimport { repeat, escape } from '../util';\n\nvar escapes: [RegExp, string][] = [[/\\s#/g, ' \\\\#']];\n\nexport const applyHeadingRule = (service: Service) => {\n  service.addRule('heading', {\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n    replacement: function(content, node, options) {\n      var hLevel = Number(node.nodeName.charAt(1));\n\n      if (options.headingStyle === 'setext' && hLevel < 3) {\n        var underline = repeat(hLevel === 1 ? '=' : '-', content.length);\n        return '\\n\\n' + content + '\\n' + underline + '\\n\\n';\n      } else {\n        return (\n          '\\n\\n' + repeat('#', hLevel) + ' ' + escape(escapes, content) + '\\n\\n'\n        );\n      }\n    },\n  });\n};\n","import Service from '../service';\nimport { fenceReplacement, isFence } from '../util';\n\nexport const applyFenceRule = (service: Service) => {\n  service.addRule('fencedCodeBlock', {\n    filter: function(node, options) {\n      return isFence(options, node);\n    },\n\n    replacement: fenceReplacement,\n  });\n};\n","import Service from '../service';\nimport { Options } from '../types';\n\nexport const applyCodeRule = (service: Service) => {\n  service.addRule('code', {\n    filter: function(node) {\n      var hasSiblings = node.previousSibling || node.nextSibling;\n      var isCodeBlock =\n        node.parentNode && node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n      return node.nodeName === 'CODE' && !isCodeBlock;\n    },\n\n    replacement: function(content, _, options: Options) {\n      if (!content.trim()) return '';\n\n      var delimiter = options.codeDelimiter || '`';\n      var leadingSpace = '';\n      var trailingSpace = '';\n      var matches = content.match(/`+/gm);\n      if (matches) {\n        if (/^`/.test(content)) leadingSpace = ' ';\n        if (/`$/.test(content)) trailingSpace = ' ';\n        while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n      }\n\n      return delimiter + leadingSpace + content + trailingSpace + delimiter;\n    },\n  });\n};\n","import Service from '../service';\nimport { escape } from '../util';\n\nconst escapes: [RegExp, string][] = [\n  [/\\*/g, '\\\\*'],\n  [/\"/g, '\\\\\"'],\n];\nexport const applyReferenceLinkRule = (service: Service) => {\n  service.addRule('referenceLink', {\n    filter: function(node, options) {\n      return !!(\n        options.linkStyle === 'referenced' &&\n        node.nodeName === 'A' &&\n        node.getAttribute('href')\n      );\n    },\n\n    replacement: function(content, node: any, options) {\n      var href = escape(escapes, decodeURIComponent(node.getAttribute('href')));\n      if (href.includes(' ')) {\n        href = '<' + href + '>';\n      }\n      var title = node.title ? ' \"' + escape(escapes, node.title) + '\"' : '';\n      var replacement;\n      var reference;\n\n      switch (options.linkReferenceStyle) {\n        case 'collapsed':\n          replacement = '[' + content + '][]';\n          reference = '[' + content + ']: ' + href + title;\n          break;\n        case 'shortcut':\n          replacement = '[' + content + ']';\n          reference = '[' + content + ']: ' + href + title;\n          break;\n        default:\n          var id =\n            this.references && this.references.length\n              ? 'ref' + (this.references.length + 1)\n              : 'ref';\n          replacement = '[' + content + '][' + id + ']';\n          reference = '[' + id + ']: ' + href + title;\n      }\n\n      this.references && this.references.push(reference);\n      return replacement;\n    },\n\n    references: [],\n\n    unshift: function() {\n      var references = '';\n      if (this.references && this.references.length) {\n        references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n        this.references = []; // Reset references\n      }\n      return references;\n    },\n  });\n};\n","import { escape } from '../util';\nimport Service from '../service';\nimport { Node, Options } from '../types';\nconst escapes: [\n  RegExp,\n  string | ((substring: string, ...args: any[]) => string)\n][] = [\n  [\n    /(.*)\\|(.*)/g,\n    (match, p1, p2) => {\n      if (match.match(/\\`.*\\|.*\\`/)) {\n        return `${p1}\\|${p2}`;\n      }\n      return `${p1}\\\\|${p2}`;\n    },\n  ],\n];\n\nvar every = Array.prototype.every;\nvar indexOf = Array.prototype.indexOf;\n\nfunction cell(content: string, node: Node, options?: Options) {\n  var index = node.parentNode\n    ? indexOf.call(node.parentNode.childNodes, node)\n    : -1;\n  var prefix = ' ';\n  if (options && options.convertNoHeaderTable) {\n    content = content.replace(/\\n+/g, '<br>');\n  }\n  if (index === 0) prefix = '| ';\n  return prefix + escape(escapes, content) + ' |';\n}\nfunction isFirstTbody(element: Node & ParentNode) {\n  var previousSibling = element.previousSibling;\n  return (\n    element.nodeName === 'TBODY' &&\n    (!previousSibling ||\n      (previousSibling.nodeName === 'THEAD' &&\n        /^\\s*$/i.test(previousSibling.textContent || '')))\n  );\n}\nfunction isHeadingRow(tr: Node) {\n  var parentNode = tr.parentNode;\n  return parentNode\n    ? parentNode.nodeName === 'THEAD' ||\n        (parentNode.firstChild === tr &&\n          (parentNode.nodeName === 'TABLE' ||\n            isFirstTbody(parentNode as Node)) &&\n          every.call(tr.childNodes, function(n: HTMLElement) {\n            return n.nodeName === 'TH';\n          }))\n    : false;\n}\n\nexport const applyTableRule = (service: Service) => {\n  service.keep(function(node: Node) {\n    return (\n      node.nodeName === 'TABLE' &&\n      !isHeadingRow((node as HTMLTableElement).rows[0])\n    );\n  });\n\n  service.addRule('table', {\n    filter: function(node) {\n      return (\n        node.nodeName === 'TABLE' &&\n        isHeadingRow((node as HTMLTableElement).rows[0])\n      );\n    },\n\n    replacement: function(content) {\n      // Ensure there are no blank lines\n      content = content.replace('\\n\\n', '\\n');\n      return '\\n\\n' + content + '\\n\\n';\n    },\n  });\n\n  service.addRule('tableSection', {\n    filter: ['thead', 'tbody', 'tfoot'],\n    replacement: function(content: string) {\n      return content;\n    },\n  });\n\n  service.addRule('tableRow', {\n    filter: 'tr',\n    replacement: function(content, node) {\n      var borderCells = '';\n      const alignMap: { [key: string]: string } = {\n        left: ':--',\n        right: '--:',\n        center: ':-:',\n      };\n\n      if (isHeadingRow(node)) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          var border = '---';\n          const curNode = node.childNodes[i] as HTMLElement;\n          var align = (\n            curNode.getAttribute('align') ||\n            curNode.style.textAlign ||\n            ''\n          ).toLowerCase();\n\n          if (align) border = alignMap[align] || border;\n\n          borderCells += cell(border, curNode);\n        }\n      }\n      return '\\n' + content + (borderCells ? '\\n' + borderCells : '');\n    },\n  });\n\n  service.addRule('tableCell', {\n    filter: ['th', 'td'],\n    replacement: function(content: string, node: Node, options) {\n      return cell(content, node, options);\n    },\n  });\n\n  service.addRule('noHeaderTable', {\n    filter: function(node, options) {\n      const hasHead = Array.from(node.childNodes).some(\n        n => n.nodeName === 'THEAD'\n      );\n      if (\n        node.nodeName === 'TABLE' &&\n        !hasHead &&\n        options.convertNoHeaderTable\n      ) {\n        try {\n          const tr = node.querySelector('tr');\n          if (tr) {\n            const length = tr.cells.length;\n            const header = (node as HTMLTableElement).createTHead();\n            const row = header.insertRow(0);\n            // console.dir(node);\n            for (let i = 0; i < length; i++) {\n              const cell = row.insertCell(i);\n              cell.innerHTML = ' ';\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          return false;\n        }\n        return true;\n      }\n      return false;\n    },\n\n    replacement: function(content) {\n      return content;\n    },\n  });\n};\n","import { Options, Node } from '../types';\nimport {\n  findOrderListIndentNumber,\n  findParentNumber,\n  repeat,\n  IndentCodeIsListfirstChild,\n} from '../util';\nimport Service from '../service';\n\nfunction caclListIndent(node: Node, options: Options): number {\n  var nestULCount = findParentNumber(node, 'UL');\n  var nestOLCount = findParentNumber(node, 'OL');\n  if (nestOLCount) {\n    // Info:如果这个缩进代码父元素是有序列表，并它是第一个元素\n    const parentNode = node.parentNode;\n    const isFirstChild =\n      parentNode &&\n      parentNode.firstChild &&\n      parentNode.nodeName === 'LI' &&\n      parentNode.firstChild === node;\n    const IndentCodeIsfirstChild = IndentCodeIsListfirstChild(\n      parentNode as HTMLElement,\n      options\n    );\n    return (\n      nestULCount * 2 +\n      nestOLCount * 4 +\n      4 +\n      findOrderListIndentNumber(node) +\n      (isFirstChild ? -4 : 0) +\n      (IndentCodeIsfirstChild ? -1 : 0)\n    );\n  }\n  return nestULCount * 2 + 4;\n}\nexport const applyIndentedCodeBlockRule = (service: Service) => {\n  service.addRule('indentedCodeBlock', {\n    filter: function(node, options) {\n      return !!(\n        options.codeBlockStyle === 'indented' &&\n        node.nodeName === 'PRE' &&\n        node.firstChild &&\n        node.firstChild.nodeName === 'CODE'\n      );\n    },\n\n    replacement: function(_: string, node, options: Options) {\n      const indent = repeat(' ', caclListIndent(node, options));\n      return node.firstChild && node.firstChild.textContent\n        ? '\\n\\n' +\n            indent +\n            node.firstChild.textContent.replace(/\\n/g, '\\n' + indent) +\n            '\\n\\n'\n        : '\\n\\n    \\n\\n';\n    },\n  });\n};\n","import Service from '../service';\n\nexport const applyBlockquoteRule = (service: Service) => {\n  service.addRule('hr', {\n    filter: 'blockquote',\n\n    replacement: function(content, node) {\n      var parent = node.parentNode;\n      var parentIsList = parent && parent.nodeName === 'LI';\n      var blank = parentIsList ? '\\n' : '\\n\\n';\n      content = content.replace(/^\\n+|\\n+$/g, '').replace(/^/gm, '> ');\n      return blank + content + blank;\n    },\n  });\n};\n","//em\nimport Service from '../service';\n\nexport const applyEmRule = (service: Service) => {\n  service.addRule('em', {\n    filter: ['em', 'i'],\n\n    replacement: function(content, node, options) {\n      if (!content.trim()) return '';\n      let emDelimiter = options.emDelimiter;\n      if (\n        node.parentNode &&\n        node.parentNode.nodeName === 'EM' &&\n        node.parentNode.firstChild === node.parentNode.lastChild\n      ) {\n        emDelimiter = emDelimiter === '_' ? '*' : '_';\n      }\n      return emDelimiter + content + emDelimiter;\n    },\n  });\n};\n","// del\nimport Service from '../service';\n\nexport const applyDelRule = (service: Service) => {\n  service.addRule('del', {\n    filter: ['del', 's'],\n\n    replacement: function(content) {\n      return '~~' + content + '~~';\n    },\n  });\n};\n","import Service from '../service';\nimport { escape } from '../util';\n\nconst specialChars = [' ', '(', ')', '\\\\', '\"'];\nconst escapes: [RegExp, string][] = [[/\"/g, '&quot;']];\nexport const applyLinkRule = (service: Service) => {\n  service.addRule('link', {\n    filter: function(node, options) {\n      return !!(options.linkStyle === 'inlined' && node.nodeName === 'A');\n    },\n\n    replacement: function(content, node) {\n      var href = (node as HTMLElement).getAttribute('href');\n      if (!href && !content) {\n        return '';\n      }\n      // Info:autolink\n      var normalizeHref = href\n        ? decodeURIComponent(href).replace('mailto:', '')\n        : '';\n      if (node.firstChild && normalizeHref === node.firstChild.nodeValue) {\n        return '<' + node.firstChild.nodeValue + '>';\n      }\n      if (\n        href &&\n        normalizeHref.split('').some(char => specialChars.includes(char))\n      ) {\n        href = '<' + decodeURIComponent(href) + '>';\n      }\n      var title = escape(escapes, (node as HTMLElement).title);\n      title = title ? ' \"' + title + '\"' : '';\n      return '[' + content + '](' + href + title + ')';\n    },\n  });\n};\n","import Service from '../service';\n\nexport const applyImageRule = (service: Service) => {\n  service.addRule('hr', {\n    filter: 'img',\n\n    replacement: function(_content, node) {\n      var alt = node.getAttribute('alt') || '';\n      var src = node.getAttribute('src') || '';\n      var title = node.title || '';\n      var titlePart = title ? ' \"' + title + '\"' : '';\n      return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : '';\n    },\n  });\n};\n","import Service from '../service';\n\nexport const applyBrRule = (service: Service) => {\n  service.addRule('hr', {\n    filter: 'br',\n\n    replacement: function(_content, _node, options) {\n      return options.br + '\\n';\n    },\n  });\n};\n","import Service from '../service';\n\nexport const applyStrongRule = (service: Service) => {\n  service.addRule('hr', {\n    filter: ['strong', 'b'],\n\n    replacement: function(content, _node, options) {\n      if (!content.trim()) return '';\n      return options.strongDelimiter + content + options.strongDelimiter;\n    },\n  });\n};\n","import Service from '../service';\n\nexport const applyTaskRule = (service: Service) => {\n  service.addRule('task', {\n    filter: function(node) {\n      return (\n        (node as HTMLInputElement).type === 'checkbox' &&\n        node.parentNode != null &&\n        node.parentNode.nodeName === 'LI'\n      );\n    },\n    replacement: function(_content, node) {\n      return ((node as HTMLInputElement).checked ? '[x]' : '[ ]') + ' ';\n    },\n  });\n};\n","import Service from '../service';\nimport { applyListRule } from './list';\nimport { applyHrRule } from './hr';\nimport { applyParagraphRule } from './paragraph';\nimport { applyHeadingRule } from './heading';\nimport { applyFenceRule } from './fencedCodeBlock';\nimport { applyCodeRule } from './code';\nimport { applyReferenceLinkRule } from './referenceLinks';\nimport { applyTableRule } from './table';\nimport { applyIndentedCodeBlockRule } from './indentedCodeBlock';\nimport { applyBlockquoteRule } from './blockquote';\nimport { applyEmRule } from './em';\nimport { applyDelRule } from './del';\nimport { applyLinkRule } from './link';\nimport { applyImageRule } from './image';\nimport { applyBrRule } from './br';\nimport { applyStrongRule } from './strong';\nimport { applyTaskRule } from './taskListItems';\n\nimport { isKeep } from '../util/isKeep';\n\nexport default (service: Service) => {\n  service.use([\n    applyListRule,\n    applyHrRule,\n    applyParagraphRule,\n    applyHeadingRule,\n    applyFenceRule,\n    applyCodeRule,\n    applyReferenceLinkRule,\n    applyTableRule,\n    applyIndentedCodeBlockRule,\n    applyBlockquoteRule,\n    applyEmRule,\n    applyDelRule,\n    applyLinkRule,\n    applyBrRule,\n    applyStrongRule,\n    applyImageRule,\n    applyTaskRule,\n  ]);\n\n  service.keep(node => {\n    if (isKeep(service.options, node)) {\n      if (node.parentNode) {\n        const index = Array.from(node.parentNode.childNodes).findIndex(\n          n => n === node\n        );\n        const next: ChildNode & { unNeedEscape?: boolean } =\n          node.parentNode.childNodes[index + 1];\n        next && (next.unNeedEscape = true);\n      }\n      return true;\n    }\n    return false;\n  });\n};\n","import isBlock from './isBlock';\nimport isVoid from './isVoid';\nimport { Node } from '../types';\n\ninterface Options {\n  element: Node;\n  isBlock: typeof isBlock;\n  isVoid: typeof isVoid;\n  isPre?: (node: Node) => boolean;\n}\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace(options: Options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre =\n    options.isPre ||\n    function(node: any) {\n      return node.nodeName === 'PRE';\n    };\n\n  if (!element.firstChild || isPre(element)) return;\n\n  var prevText = null;\n  var prevVoid = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) {\n      // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data ? node.data.replace(/[ \\r\\n\\t]+/g, ' ') : '';\n      if (\n        (!prevText || !prevText.data || / $/.test(prevText.data)) &&\n        !prevVoid &&\n        text[0] === ' '\n      ) {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue;\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) {\n      // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText && prevText.data) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        prevVoid = false;\n      } else if (isVoid(node)) {\n        // Avoid trimming space around non-block, non-BR void elements.\n        prevText = null;\n        prevVoid = true;\n      }\n    } else if (node.nodeType === 8) {\n      if (node.nextElementSibling && node.parentNode) {\n        const index = Array.from(node.parentNode.childNodes).findIndex(\n          n => n === node\n        );\n        (node.parentNode.childNodes[index + 1] as Node).unNeedEscape = true;\n      }\n    } else {\n      node = remove(node);\n      continue;\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText && prevText.data) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove(node: Node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode && node.parentNode.removeChild(node);\n\n  return next as Node;\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next(\n  prev: Node | null,\n  current: Node,\n  isPre: (node: Node) => boolean\n) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return (current.nextSibling || current.parentNode) as Node;\n  }\n\n  return (current.firstChild ||\n    current.nextSibling ||\n    current.parentNode) as Node;\n}\n\nexport default collapseWhitespace;\n","import { Node } from '../types';\n\nvar blockElements = [\n  'address',\n  'article',\n  'aside',\n  'audio',\n  'blockquote',\n  'body',\n  'canvas',\n  'center',\n  'dd',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'isindex',\n  'li',\n  'main',\n  'menu',\n  'nav',\n  'noframes',\n  'noscript',\n  'ol',\n  'output',\n  'p',\n  'pre',\n  'section',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'tr',\n  'ul',\n];\n\nexport default function isBlock(node: Node) {\n  return blockElements.indexOf(node.nodeName.toLowerCase()) !== -1;\n}\n","import { Node } from '../types';\n\nexport const voidElements = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n];\n\nexport default function isVoid(node: Node) {\n  return voidElements.indexOf(node.nodeName.toLowerCase()) !== -1;\n}\n","/*\n * Set up window for Node.js\n */\n\nvar root = typeof window !== 'undefined' ? window : {};\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively() {\n  var Parser = (root as Window & typeof globalThis).DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse;\n}\n\nclass Parser {\n  parseFromString(string: string) {\n    const JSDOM = require('jsdom').JSDOM;\n    return new JSDOM(string).window.document;\n  }\n}\n\nexport default canParseHTMLNatively()\n  ? (root as Window & typeof globalThis).DOMParser\n  : Parser;\n","import collapseWhitespace from '../util/collapse-whitespace';\nimport isBlock from '../util/isBlock';\nimport isVoid from '../util/isVoid';\nimport HTMLParser from './HTMLParser';\n\nvar _htmlParser: DOMParser;\n\nfunction htmlParser() {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser;\n}\n\nexport function createRootNode(input: string) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-sitdown id=\"root-node\">' + input + '</x-sitdown>',\n      'text/html'\n    );\n    root = doc.getElementById('root-node');\n  } else {\n    root = (input as HTMLElement).cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root as HTMLElement,\n    isBlock: isBlock,\n    isVoid: isVoid,\n  });\n\n  return root;\n}\n\nexport default class RootNode {\n  constructor(input: string) {\n    // @ts-ignore\n    return createRootNode(input);\n  }\n}\n","import { Rule, Node, TagName, Options } from '../../types';\n\nfunction filterValue(rule: Rule, node: Node, options: Options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    return filter === node.nodeName.toLowerCase();\n  } else if (Array.isArray(filter)) {\n    return filter.indexOf(<TagName>node.nodeName.toLowerCase()) > -1;\n  } else if (typeof filter === 'function') {\n    return filter.call(rule, node, options);\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function');\n  }\n}\n\nexport default function findRule(rules: Rule[], node: Node, options: Options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule;\n  }\n  return void 0;\n}\n","/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\nimport findRule from './findRule';\nimport {\n  Options,\n  ReplacementFunction,\n  Rule,\n  Node,\n  FilterFunction,\n} from '../../types';\n\nexport default class Rules {\n  private _keep: Rule[];\n  private _remove: Rule[];\n\n  options: Options;\n  array: Rule[];\n\n  blankRule: {\n    replacement: ReplacementFunction;\n  };\n  defaultRule: {\n    replacement: ReplacementFunction;\n  };\n  keepReplacement: ReplacementFunction;\n\n  constructor(options: Options) {\n    if (typeof options.blankReplacement !== 'function') {\n      throw Error('blankReplacement option must be function');\n    }\n\n    if (typeof options.keepReplacement !== 'function') {\n      throw Error('keepReplacement option must be function');\n    }\n\n    if (typeof options.defaultReplacement !== 'function') {\n      throw Error('defaultReplacement option must be function');\n    }\n    this.options = options;\n    this._keep = [];\n    this._remove = [];\n\n    this.blankRule = {\n      replacement: options.blankReplacement,\n    };\n\n    this.keepReplacement = options.keepReplacement;\n\n    this.defaultRule = {\n      replacement: options.defaultReplacement,\n    };\n\n    this.array = [];\n    for (var key in options.rules) this.array.push(options.rules[key]);\n  }\n\n  add(_key: string, rule: Rule) {\n    this.array.unshift(rule);\n  }\n\n  keep(filter: FilterFunction) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement,\n    });\n  }\n\n  remove(filter: FilterFunction) {\n    this._remove.unshift({\n      filter: filter,\n      replacement() {\n        return '';\n      },\n    });\n  }\n\n  forNode(node: Node) {\n    if (node.isBlank) return this.blankRule;\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule;\n    if ((rule = findRule(this._keep, node, this.options))) return rule;\n    if ((rule = findRule(this._remove, node, this.options))) return rule;\n\n    return this.defaultRule;\n  }\n\n  forEach(fn: (item: any, i: number) => void) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n}\n","import isVoid, { voidElements } from '../../util/isVoid';\nimport { Node } from '../../types';\n\nvar voidSelector = voidElements.join();\nfunction hasVoid(node: Node) {\n  return node.querySelector && node.querySelector(voidSelector);\n}\nexport default function isBlank(node: Node) {\n  return (\n    [\n      'A',\n      'TABLE',\n      'THEAD',\n      'TBODY',\n      'TR',\n      'TH',\n      'TD',\n      'IFRAME',\n      'SCRIPT',\n      'AUDIO',\n      'VIDEO',\n    ].indexOf(node.nodeName) === -1 &&\n    /^\\s*$/i.test(node.textContent || '') &&\n    !isVoid(node) &&\n    !hasVoid(node)\n  );\n}\n","import isBlock from '../../util/isBlock';\nimport { Node } from '../../types';\n\nexport default function flankingWhitespace(node: Node) {\n  var leading = '';\n  var trailing = '';\n\n  if (!node.isBlock) {\n    var hasLeading = /^[ \\r\\n\\t]/.test(node.textContent || '');\n    var hasTrailing = /[ \\r\\n\\t]$/.test(node.textContent || '');\n\n    if (hasLeading && !isFlankedByWhitespace('left', node)) {\n      leading = ' ';\n    }\n    if (hasTrailing && !isFlankedByWhitespace('right', node)) {\n      trailing = ' ';\n    }\n  }\n\n  return { leading: leading, trailing: trailing };\n}\n\nfunction isFlankedByWhitespace(side: string, node: Node) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue || '');\n    } else if (sibling.nodeType === 1 && !isBlock(sibling as Node)) {\n      isFlanked = regExp.test(sibling.textContent || '');\n    }\n  }\n  return isFlanked;\n}\n","import isBlock from '../../util/isBlock';\nimport isBlank from './isBlank';\nimport flankingWhitespace from './flankingWhitespace';\n\nexport default class Node {\n  unNeedEscape?: boolean;\n  data?: string;\n  isBlank?: boolean;\n  isBlock?: boolean;\n  isCode?: boolean;\n  flankingWhitespace?: {\n    leading: string;\n    trailing: string;\n  };\n\n  constructor(node: HTMLElement) {\n    const newNode = node as Node & HTMLElement;\n    newNode.isBlock = isBlock(node);\n    newNode.isCode =\n      node.nodeName.toLowerCase() === 'code' ||\n      (node.parentNode as Node).isCode;\n    newNode.isBlank = isBlank(node);\n    newNode.flankingWhitespace = flankingWhitespace(node);\n    return Object.assign(node, newNode);\n  }\n}\n","var leadingNewLinesRegExp = /^\\n*/;\nvar trailingNewLinesRegExp = /\\n*$/;\n\nfunction separatingNewlines(output: string, replacement: string) {\n  var outputNewLines = output.match(trailingNewLinesRegExp);\n  var replacementNewLines = replacement.match(leadingNewLinesRegExp);\n  var newlines = [\n    outputNewLines ? outputNewLines[0] : '',\n    replacementNewLines ? replacementNewLines[0] : '',\n  ].sort();\n  var maxNewlines = newlines[newlines.length - 1];\n  return maxNewlines.length < 2 ? maxNewlines : '\\n\\n';\n}\n\n/**\n * Determines the new lines between the current output and the replacement\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns The whitespace to separate the current output and the replacement\n * @type String\n */\n\nexport default function join(string1: string, string2: string) {\n  var separator = separatingNewlines(string1, string2);\n\n  // Remove trailing/leading newlines and replace with separator\n  string1 = string1.replace(trailingNewLinesRegExp, '');\n  string2 = string2.replace(leadingNewLinesRegExp, '');\n\n  return string1 + separator + string2;\n}\n","import { createRootNode } from './RootNode';\nimport Rules from './Rules';\nimport Node from './Node';\nimport join from '../util/join';\nimport { Options, Node as NodeType, Rule, FilterFunction } from '../types';\n\nvar rules = {};\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. '],\n  // escapes\n  [/^(\\d+)\\. /g, '$1\\\\. '],\n  [/!/g, '\\\\!'],\n  // [/\"/g, '\\\\\"'],\n  // [/'/g, `\\\\'`],\n  // [/#/g, '\\\\#'],\n  [/\\$/g, '\\\\$'],\n  [/%/g, '\\\\%'],\n  [/&/g, '\\\\&'],\n  [/\\(/g, '\\\\('],\n  [/\\)/g, '\\\\)'],\n  // [/\\+/g, '\\\\+'],\n  // [/\\-/g, '\\\\-'],\n  // [/\\,/g, '\\\\,'],\n  // [/\\./g, '\\\\.'],\n  // [/\\:/g, '\\\\:'],\n  // [/\\;/g, '\\\\;'],\n  [/\\</g, '\\\\<'],\n  // [/\\>/g, '\\\\>'],\n  // [/\\=/g, '\\\\='],\n  [/\\?/g, '\\\\?'],\n  [/\\{/g, '\\\\{'],\n  // [/\\|/g, '\\\\|'],\n  [/\\}/g, '\\\\}'],\n  [/\\~/g, '\\\\~'],\n  [/\\^/g, '\\\\^'],\n  [/\\@/g, '\\\\@'],\n  // [/\\//g, '\\\\/'],\n];\n\nclass Service {\n  options: Options;\n  rules: Rules;\n\n  constructor(options: Options) {\n    var defaults = {\n      rules: rules,\n      headingStyle: 'setext',\n      hr: '* * *',\n      bulletListMarker: '*',\n      codeBlockStyle: 'indented',\n      fence: '```',\n      emDelimiter: '_',\n      strongDelimiter: '**',\n      linkStyle: 'inlined',\n      linkReferenceStyle: 'full',\n      br: '  ',\n      blankReplacement: function(_content: string, node: NodeType) {\n        return node.isBlock ? '\\n\\n' : '';\n      },\n      keepReplacement: function(_content: string, node: NodeType) {\n        return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML;\n      },\n      defaultReplacement: function(content: string, node: NodeType) {\n        return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content;\n      },\n    };\n    this.options = Object.assign({}, defaults, options);\n    this.rules = new Rules(this.options);\n  }\n\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown(input: string) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      );\n    }\n\n    if (input === '') return '';\n\n    const node = createRootNode(input) as NodeType;\n    if (node) {\n      var output = this.process(node);\n      return this.postProcess(output);\n    } else {\n      return input;\n    }\n  }\n\n  /**\n   * Reduces a DOM node down to its Markdown string equivalent\n   * @private\n   * @param {HTMLElement} parentNode The node to convert\n   * @returns A Markdown representation of the node\n   * @type String\n   */\n\n  process(parentNode: NodeType) {\n    const rst = reduce.call(\n      parentNode.childNodes,\n      (output, node) => {\n        node = new Node(node);\n\n        var replacement = '';\n        if (node.nodeType === 3) {\n          replacement =\n            node.isCode || node.unNeedEscape\n              ? node.nodeValue\n              : this.escape(node.nodeValue);\n        } else if (node.nodeType === 1) {\n          replacement = this.replacementForNode(node);\n        } else if (node.nodeType === 8) {\n          replacement = '<!--' + node.nodeValue + '-->';\n        }\n\n        return join(String(output), replacement);\n      },\n      ''\n    );\n    return String(rst);\n  }\n\n  /**\n   * Appends strings as each rule requires and trims the output\n   * @private\n   * @param {String} output The conversion output\n   * @returns A trimmed version of the ouput\n   * @type String\n   */\n\n  postProcess(output: string) {\n    this.rules.forEach(rule => {\n      if (typeof rule.append === 'function') {\n        output = join(output, rule.append(this.options));\n      }\n      if (typeof rule.unshift === 'function') {\n        output = join(rule.unshift(this.options), output);\n      }\n    });\n\n    return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '');\n  }\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The instance for chaining\n   * @type Object\n   */\n\n  use(plugin: any) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions');\n    }\n    return this;\n  }\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The instance for chaining\n   * @type Object\n   */\n\n  addRule(key: string, rule: Rule) {\n    this.rules.add(key, rule);\n    return this;\n  }\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The instance for chaining\n   * @type Object\n   */\n\n  keep(filter: FilterFunction) {\n    this.rules.keep(filter);\n    return this;\n  }\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The instance for chaining\n   * @type Object\n   */\n\n  remove(filter: FilterFunction) {\n    this.rules.remove(filter);\n    return this;\n  }\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape(string: string) {\n    return escapes.reduce(function(accumulator, escape) {\n      return accumulator.replace(escape[0], <string>escape[1]);\n    }, string);\n  }\n\n  /**\n   * Converts an element node to its Markdown equivalent\n   * @private\n   * @param {HTMLElement} node The node to convert\n   * @returns A Markdown representation of the node\n   * @type String\n   */\n\n  replacementForNode(node: NodeType) {\n    var rule = this.rules.forNode(node);\n    var content = this.process(node);\n    var whitespace = node.flankingWhitespace || { leading: '', trailing: '' };\n    if (whitespace.leading || whitespace.trailing) content = content.trim();\n    return (\n      whitespace.leading +\n      (rule.replacement ? rule.replacement(content, node, this.options) : '') +\n      whitespace.trailing\n    );\n  }\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert(input: NodeType | string) {\n  return (\n    input != null &&\n    (typeof input === 'string' ||\n      (input.nodeType &&\n        (input.nodeType === 1 ||\n          input.nodeType === 9 ||\n          input.nodeType === 11)))\n  );\n}\n\nexport default Service;\nexport { createRootNode } from './RootNode';\n","import applyPlugins from './plugins';\nimport { blankReplacement, keepReplacement } from './util';\nimport Service from './service';\nimport * as Util from './util';\nimport { Options } from './types';\n\nexport class Sitdown {\n  defaultOptions: Options;\n  service: Service;\n\n  constructor(options?: Options) {\n    this.defaultOptions = {\n      headingStyle: 'atx',\n      blankReplacement,\n      keepReplacement,\n    };\n    this.service = new Service({\n      ...this.defaultOptions,\n      ...options,\n    });\n    applyPlugins(this.service);\n  }\n\n  HTMLToMD(html: string, env?: object) {\n    if (env) {\n      this.service.options.env = env;\n    }\n    return this.service.turndown(html);\n  }\n\n  use(plugin: Plugin | Plugin[]) {\n    this.service.use(plugin);\n    return this;\n  }\n}\nexport type Plugin = (service: Service) => void;\nexport { default as RootNode } from './service/RootNode';\nexport { Util };\n"],"names":["escape","escapes","string","reduce","accumulator","replace","isFence","options","node","codeBlockStyle","nodeName","firstChild","isCode","hasSiblings","previousSibling","nextSibling","isCodeBlock","parentNode","isKeep","filters","keepFilter","Array","isArray","some","filter","toLowerCase","fenceReplacement","content","className","language","match","startFence","undefined","fence","endFence","parent","parentIsList","textContent","endsWith","findParentNumber","parentName","count","repeat","character","join","IndentCodeIsListfirstChild","list","findOrderListIndentNumber","start","getAttribute","length","ListNode","lineIndent","nestOLCount","nestULCount","nestCount","indent","caclPrefix","input","prefix","parentIsOL","isNewList","inLast","isLoose","followCode","nestListAndParentIsEmpty","index","prototype","indexOf","call","children","Number","trimStart","lastChild","innerHTML","outerHTML","listReplacement","listNode","newList","bulletListMarker","test","keepReplacement","html","attrs","i","attributes","attr","name","nodeValue","localName","isBlock","blankReplacement","delimiter","codeDelimiter","applyListRule","service","addRule","replacement","lastElementChild","applyHrRule","_","__","hr","applyParagraphRule","hasCommentChild","from","childNodes","item","nodeType","applyHeadingRule","hLevel","charAt","headingStyle","underline","applyFenceRule","applyCodeRule","trim","leadingSpace","trailingSpace","matches","applyReferenceLinkRule","linkStyle","href","decodeURIComponent","includes","title","reference","linkReferenceStyle","id","references","push","unshift","p1","p2","every","cell","convertNoHeaderTable","isFirstTbody","element","isHeadingRow","tr","n","applyTableRule","keep","rows","borderCells","alignMap","left","right","center","border","curNode","align","style","textAlign","hasHead","querySelector","cells","header","createTHead","row","insertRow","insertCell","e","console","log","caclListIndent","isFirstChild","IndentCodeIsfirstChild","applyIndentedCodeBlockRule","applyBlockquoteRule","blank","applyEmRule","emDelimiter","applyDelRule","specialChars","applyLinkRule","normalizeHref","split","char","applyImageRule","_content","alt","src","titlePart","applyBrRule","_node","br","applyStrongRule","strongDelimiter","applyTaskRule","type","checked","use","findIndex","next","unNeedEscape","collapseWhitespace","isVoid","isPre","prevText","prevVoid","prev","text","data","substr","remove","nextElementSibling","nextNode","removeChild","current","blockElements","voidElements","root","window","canParseHTMLNatively","Parser","DOMParser","canParse","parseFromString","JSDOM","require","document","_htmlParser","htmlParser","HTMLParser","createRootNode","doc","getElementById","cloneNode","RootNode","filterValue","rule","TypeError","findRule","rules","Rules","Error","defaultReplacement","_keep","_remove","blankRule","defaultRule","array","key","add","_key","forNode","isBlank","forEach","fn","voidSelector","hasVoid","flankingWhitespace","leading","trailing","hasLeading","hasTrailing","isFlankedByWhitespace","side","sibling","regExp","isFlanked","Node","newNode","Object","assign","leadingNewLinesRegExp","trailingNewLinesRegExp","separatingNewlines","output","outputNewLines","replacementNewLines","newlines","sort","maxNewlines","string1","string2","separator","Service","defaults","turndown","canConvert","process","postProcess","rst","replacementForNode","String","append","plugin","whitespace","Sitdown","defaultOptions","applyPlugins","HTMLToMD","env"],"mappings":"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"}